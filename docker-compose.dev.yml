services:

  frontend-dev:
    build:
      context: invoice-frontend
      dockerfile: dev.Dockerfile
    # command: npm run dev:container # Uncomment this line when running playwright inside docker
    environment:
      - VITE_BACKEND_URL=https://localhost:8000/graphql 
      - VITE_DEMO_MODE=false
    ports:
      - "5173:5173"
    networks:
      - my_network_dev
    volumes:
      - ./invoice-frontend:/usr/src/app/
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:5173/invoice-web-app/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend-dev:
    build:
      context: invoice-backend
      dockerfile: dev.Dockerfile
    depends_on:
      db-dev:
        condition: service_started
    restart: unless-stopped
    ports:
      - "8000:8000"
    command: sh -c "npx prisma@6.2.1 generate && npx prisma@6.2.1 db push && npm run dev"
    # use commented out command to run playwright tests in their own DB
    # command:  sh -c "npx prisma@6.2.1 generate && npx prisma@6.2.1 db push && npm run start:test"
    environment:
      - NODE_ENV=test
      - PORT=8000
      - REQUEST_ORIGIN=https://localhost
      - SECRET=theSecretStuff
      - CERT_DIR="./certs"
      - DEMO_MODE=false
    networks:
      - my_network_dev
    volumes:
      - ./invoice-backend:/usr/src/app/
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db-dev:
    image: postgres:16.1
    hostname: db-dev
    container_name: db-dev
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      PGUSER: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    networks:
      - my_network_dev
    volumes:
      - pgdata-dev:/var/lib/postgresql/data
      - ./init.dev.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5


  adminer-dev:
    image: adminer:4.8.1
    restart: always
    ports:
      - 8080:8080
    networks:
      - my_network_dev

  playwright-e2e:
    depends_on:
      frontend-dev:
        condition: service_healthy
      backend-dev:
        condition: service_healthy

    image: mcr.microsoft.com/playwright:v1.49.1-noble
    container_name: playwright-e2e
    working_dir: /app
    user: pwuser
    ports:
      - "9323:9323"
    volumes:
      - ./invoice-frontend:/app
    entrypoint: ["npx", "playwright", "test"]
    # entrypoint: ["sh"] # switch to this command if you want to manually trigger the tests from the container
    env_file:
      - invoice-frontend/.env
    environment:
      NODE_ENV: development
      TEST_ENV: docker
      TEST_BASE_URL: http://frontend-dev/invoice-web-app/
      VITE_BACKEND_URL: http://backend-dev/graphql/
    networks:
      - my_network_dev
    stdin_open: true
    tty: true

networks:
  my_network_dev:
    driver: bridge

volumes:
  pgdata-dev:
