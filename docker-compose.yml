services:
  frontend:
    build:
      context: invoice-frontend
      dockerfile: Dockerfile
    environment:
      VITE_BACKEND_URL: http://localhost/graphql
      REACT_APP_ENV: production
    ports:
      - "80:80"
    networks:
      - my_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_started


  backend:
    build:
      context: invoice-backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=8000
      - REQUEST_ORIGIN=http://frontend
      - SECRET=Secret
      - DATABASE_URL=postgres://postgres:example@db:5432/db
    networks:
      - my_network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      PGUSER: postgres
      POSTGRES_USER: postgres
    ports:
      - ":5432"
    networks:
      - my_network
    volumes:
    - pgdata-prod:/var/lib/postgresql/data
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5



  # proxy:
  #   image: nginx:1.25.2
  #   hostname: proxy
  #   container_name: proxy
  #   tty: true
  #   stdin_open: true
  #   depends_on:
  #     backend:
  #       condition: service_started
  #     frontend:
  #       condition: service_started
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #   networks:
  #     - my_network


networks:
  my_network:
    driver: bridge

volumes:
  pgdata-prod:
