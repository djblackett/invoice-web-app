services:
  frontend:
    build:
      context: invoice-frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_BACKEND_URL: http://proxy/api
    networks:
      - my_network
    image: invoice-frontend-prod

  backend:
    build:
      context: invoice-backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=8000
      - REQUEST_ORIGIN=http://proxy/
      - SECRET=Secret
      - DATABASE_URL=DATABASE_URL=postgres://postgres:example@localhost:5432/postgres
      - TEST_MONGODB_URI=mongodb+srv://fullstack:Vv3oxVAaSX5qlGv3@cluster0.ph36nzi.mongodb.net/test?retryWrites=true&w=majority
    networks:
      - my_network

  db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      PGUSER: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
    - pgdata:/var/lib/postgresql/data
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql


  adminer:
    image: adminer:4.8.1
    restart: always
    ports:
      - 8080:8080

  proxy:
    image: nginx:1.25.2
    hostname: proxy
    container_name: proxy
    tty: true
    stdin_open: true
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - my_network


networks:
  my_network:
    driver: bridge

volumes:
  pgdata:
