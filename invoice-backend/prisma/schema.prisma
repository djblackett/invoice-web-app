// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
   binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invoice {
  id              String         @id @default(uuid())
  createdBy       User           @relation(fields: [createdById], references: [id])
  createdById     String           
  createdAt       String
  paymentDue      String
  description     String
  paymentTerms    Int
  clientName      String
  clientEmail     String
  status          String
  total           Decimal
  items           Item[]
  clientAddress   ClientAddress? @relation(fields: [clientAddressId], references: [id], onDelete: Cascade)
  senderAddress   SenderAddress? @relation(fields: [senderAddressId], references: [id], onDelete: Cascade)
  senderAddressId Int?           @unique
  clientAddressId Int?           @unique

  @@index([createdById])
}

model Item {
  id        String  @id @default(uuid())
  name      String
  quantity  Int
  price     Decimal
  total     Decimal
  Invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId String

  @@index([invoiceId])
}

model ClientAddress {
  id       Int      @id @default(autoincrement())
  street   String
  city     String
  postCode String
  country  String
  Invoice  Invoice?
}

model SenderAddress {
  id       Int      @id @default(autoincrement())
  street   String
  city     String
  postCode String
  country  String
  Invoice  Invoice?
}

model User {
  id           String    @id @default(uuid())
  invoices     Invoice[]
  name         String?
  username     String @unique
  passwordHash String?
  role         Role   @default(USER)
}


enum Role {
  USER
  ADMIN
}